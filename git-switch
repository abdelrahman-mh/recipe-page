#!/bin/bash

# Define the Git users with their username and email
declare -A git_users=(
    ["abdelrahman-mh"]="abdelrahman.mh3@gmail.com"
    ["Abdel-Rahmann-DEV"]="abdelrahmandev6@gmail.com"
)

# Print available Git users with indices
echo -e "\e[1;34mAvailable Git Users:\e[0m"
index=0
for user in "${!git_users[@]}"; do
    echo -e "\e[1;33m[$index]\e[0m\t$user <${git_users[$user]}>"
    ((index++))
done

# Prompt the user to choose a Git user by index
read -p $'Choose a Git user (enter the index): ' chosen_index
# Validate the chosen index
if [[ "$chosen_index" =~ ^[0-9]+$ && "$chosen_index" -ge 0 && "$chosen_index" -lt "${#git_users[@]}" ]]; then
    # Get the username and email corresponding to the chosen index
    chosen_user=$(echo "${!git_users[@]}" | cut -d' ' -f$((chosen_index + 1)))
    chosen_email=${git_users[$chosen_user]}
    
    # Set Git user configuration
    git config user.name "$chosen_user"
    git config user.email "$chosen_email"
    
    # Display the updated Git configuration
    echo -e "\nGit configuration updated:"
    echo -e "user.email \e[1m$(git config --get user.email)\e[0m"
    echo -e "user.name \e[1m$(git config --get user.name)\e[0m"
    
    echo -e "Git user set to: \e[32m[$chosen_index]\e[0m\t\e[34m$chosen_user <$chosen_email>\e[0m"
else
    echo -e "\e[1;31mInvalid choice. Exiting.\e[0m"
    exit 1
fi

